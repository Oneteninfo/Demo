集中式版本控制工具SVN与分布式版本控制工具Git


git --version //查看Git版本
git clone https://github.com/git/git  //更新Git
git config --global

//创建版本库
mkdir learngit
cd learngit
pwd
git init

//提交代码（commit可以一次提交很多文件，所以可以多次add不同的文件）
git add fileName
git commit -m "描述信息"

//掌握工作区状态
git status //随时掌握工作去状态
git diff //查看修改内容

//查看提交日志
git logo //查看提交历史
git reflog //查看命令历史
git log --pretty=oneline

//版本回退（在Git中，用HEAD表示当前版本，上一个版本就是HEAD^，上上一个版本就是HEAD^^，
当然往上100个版本写100个^比较容易数不过来，所以写成HEAD~100。）
git reset --hard HEAD^ 
git reset --hard commit_id //自由更改历史版本

//撤销修改
1.git checkout -- fileName //直接丢弃工作去内容
2.git reset HEAD fileName //添加到了暂存区，丢弃工作内容。就回到了上一步1.

//删除文件
git rm fileName

//与GitHub关联
git remote add origin git@github.com:Oneteninfo/oGit.git //关联一个远程库
git push -u origin master //第一次推送master分支的所有内容

//clone GitHub远程仓库
git clone git@github.com:Oneteninfo/oNotes.git

cd fileName //查看fileName
ls //当前目录内容

//创建、合并分支

git branch //查看分支
git branch name //创建分支
git checkout name //切换分支
git checkout -b name //创建name分支，然后切换到name. -b表示创建并切换。
git merge name //合并某分支到当前分支
git branch -d name //删除某分支
 





 //Git操作文件、文件夹命令

1. cd : change directory的简写，改变目录的意思，就是切换到哪个目录下， 如 cd e:\fff  切换 E 盘下面的fff 目录。
　　当我们用cd 进入文件夹时,我们可以使用 通配符*, cd f*,  如果E盘下只有一个f开头的文件夹,它就会进入到这个文件夹.

2.cd .. 回退到上一个目录。我们在写js，引入文件时，.. 表示的就是上一个目录, 所以 cd .. 回退到上一个目录就很好理解了。注意，cd 和两个点点..之间有一个空格,  

3.pwd : print working directory, 打印工作目录，它会显示我们当前所在的目录路径。

4.ls: list, 列出当前目录中的所有文件，     只不过ll(两个ll)列出的内容更为详细。

5.touch : 新建一个文件 如 touch index.js 就会在当前目录下新建一个index.js文件。

6.rm:  remove，删除一个文件, rm index.js 就会把index.js文件删除.

7.mkdir: make directory 新建一个目录,就是新建一个文件夹. 如mkdir src 新建src 文件夹.

8.rm -r :  删除一个文件夹， r (recusive 是递归的意思)， 删除用的就是递归，先删除文件夹里面的内容，再删除文件夹。 rm -r src 删除src目录。 

9.mv 移动文件, mv index.html src   index.html 是我们要移动的文件, src 是目标文件夹,当然, 这样写,必须保证文件和目标文件夹在同一目录下.

10.reset 清屏，把git bash命令窗口中的所有内容清空。

//命令行的快捷操作

1.我们可以使用上下箭头来查找我们以前输入的命令。这个尤其适合npm 命令。当我们输入npm run dev的时候，开启开发模式。但在开发过程中要安装一个组件，如axios, 这时我们就要按ctrl+ c 停止服务器。npm install axios --save.安装完成后，我们要重新启动dev 服务器进行开发，输入npm run dev. 其实这时候，可以不用输入命令，直接按两次向上箭头，命令行中就会npm run dev 命令。当我们打开git bash 窗口后，它就会记录我们输过的命令，按上下箭头，就可以查询历史，找到我们已前输出的命令。

2.左右箭头移动光标修改命令。当我们输入命令的时候，突然发现某个单词拼错了，这时可以按左右箭头来移动光标到拼错的单词或字母上，再Delete 或Backspace 来删除该字母。其实这里有好多的快捷键来快速修改命令。
　　移动光标： 按左右键头只能一个一个移动光标，如果我们能一个单词一个单词来移动就快多了。Alt + B 和 Alt + F 来解决问题， 一个是向左移动，一个是向右移动。Ctrl + A 则是移动光标到整条命令的起始位置。Ctrl + E 则是移动光标到整条命令的结束位置。
　　对于编辑或删除来说，有几个快捷键也可以同样完成任务。 Ctr+D, 相当于Delete， Ctrl + H 相当于Backspace。 Ctrl + U 删除光标左侧的所有内容， Ctrl + K删除光标右侧的所有内容。Ctrl + W 删除光标左侧的单词， Alt + D 删除光标右侧的单词。

3. Tab 键的使用。 当我们想进入到一个目录或文件夹时，如果文件名很长，要一个一个输入，那是一件很麻烦的事情。这时tab 的作用就来了，当我们输入文件名的前几个字母时，按tab， 如果有文件名可以匹配，它就会显示出完整的文件名。

